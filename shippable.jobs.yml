jobs:
 # - name: script-1
 #   type: runSh
 #   allowPublicAccess: true
 #   steps:
 #     - IN: trigger-1
 #     - IN: myParams
 #     - IN: myParams1
 #     - IN: sample-script-3
 #       showBuildStatus: true
 #     - OUT: dv-image
#      - IN: testprivate_gitRepo
#      - IN: sampleJav_gitRepo
 #     - OUT: sampleJav_gitRepo
#      - OUT: testprivate_ciRepo
 #     - TASK:
 #       - script: printenv
 #       - script: echo "ran ls 1234"
 #       - script: echo "lololo"
 #       - script: for i in {1..9}; do echo "$i"; done
 #       - script: echo "versionName=$BUILD_NUMBER" > /build/state/script-1.env
 #       - script: echo "versionName $BUILD_NUMBER"
 #       - script: echo "versionName=$IMAGE_TAG.$BUILD_NUMBER" > $JOB_STATE/dv-image.env
 #       - script: echo "versionName=$IMAGE_TAG.$BUILD_NUMBER" > $JOB_STATE/sampleJav_gitRepo.env
 #       - script: echo $key1
 #       - script: echo $key2
 #       - script: echo $foo
 #       - script: echo $test1
 #   on_success:
 #     - script: echo "on_success"
 #     - scirpt: echo $DVIMAGE_INTEGRATION_USERNAME
 #   always:
 #     - script: echo "always"
 #     - script: echo "lol"
 #     - NOTIFY: notification-slack
  #- name: script-10
  #  type: runSh
  #  steps:
  #    - IN: myParams
  #    - IN: aws-cli-config
  #    - TASK:
  #      - script: docker pull $test
  #      - script: sudo docker images
  #- name: script-quay-test
  #  type: runSh
  #  steps:
  #    - IN: quay-cli-config
  #    - TASK:
  #      - script: docker pull quay.io/1992_bharath/gitissues
  #- name: dtr-test
  #  type: runSh
  #  steps:
  #    - IN: dtr-cli-config
  #    - TASK:
  #      - script: ifconfig
  #      - script: docker pull quay.io/revathird/docker
  #- name: pdr-test
  #  type: runSh
  #  steps:
  #    - IN: pdr-cli-config
  #    - TASK:
  #      - script: docker pull 174.138.49.87/alpine
  - name: sleep-5m
    type: runSh
    runtime:
      container: true
    steps:
      - IN: state
      - OUT: state
      - IN: printenv
      - TASK:
          name: pull stuff while booting up
          runtime:
            options:
              imageName: drydock/u14nodall
              imageTag: master
              env:
                - foo: bar
                  boo: baz
                - zoo: far
          script: 
            - printenv
            - echo lolddd
            - ls /build || true
            - echo lulz
      - TASK:
          name: run on host
          runtime:
            container: false
            options:
              env:
                foo: bar
                boo: baz
                zoo: far
          script: 
            - printenv
            - ls /build || true
            - echo lulzddd
  - name: simple-curl
    type: runSh
    steps:
      - IN: state
      - TASK:
        - script: >
            curl -H "Content-Type: application/json" https://api.shippable.com
  - name: simple-runsh
    type: runSh
    steps:
      - IN: state
      - TASK:
        - script: echo hey
        - script: x=$(shipctl get_resource_meta STATE)
        - script: cat $x/version.json
        - script: shipctl get_resource_version_key state cluster
        
  - name: print-versions
    type: runSh
    steps:
    - TASK:
      - script: aws --version
      - script: az --version
      - script: terraform --version
      - script: kubectl version || true
      - script: gcloud --version
      - script: eb --version
      - script: packer --version
  - name: printenv
    type: runSh
    os: Ubuntu_16.04
    architecture: x86_64
    steps:
    - IN: myParams1
    - OUT: state
    - TASK:
      - script: printenv
      - script: shipctl put_resource_state state check_state state_check
  - name: pull-aws-image
    type: runSh
    steps:
    - IN: awsCliConfig
      scopes:
        - ecr
    - TASK:
      - script: aws --version
      - script: docker pull 374168611083.dkr.ecr.us-east-1.amazonaws.com/www
      - script: docker images
  - name: push-gcr-image
    type: runSh
    steps:
    - IN: gcr-config
    - TASK:
      - script: gcloud --version
      - script: docker pull alpine
      - script: docker images
      - script: docker tag alpine gcr.io/sunlit-pixel-182606/alpine
      - script: gcloud docker -- push gcr.io/sunlit-pixel-182606/alpine
  - name: kube-test
    type: runSh
    steps:
    - IN: gke-config
    - TASK:
      - script: echo kubectl
      - script: kubectl version
      - script: kubectl get namespaces
  - name: packer-tester
    type: runSh
    steps:
    - IN: sample-script-3
    - IN: shrivara-aws
    - TASK:
      - script: pushd IN/sample-script-3/gitRepo
      - script: packer --version
      - script: packer validate packer-example.json
      - script: packer build -var "aws_access_key=$aws_access_key" -var "aws_secret_key=$aws_secret_key" packer-example.json
      - script: popd
  #- name: script-11
  #  type: runCLI
  #  steps:
  #    - IN: trigger-1
  #    - IN: myParams1
  #    - IN: myParams
  #    - IN: sample-script-3
  #    - TASK:
  #      - script: echo $key1
  #      - script: echo $key2
  #      - script: echo $foo
  #      - script: echo $test1
  #  on_success:
  #    - script: echo "on_success"
  #    - scirpt: echo $DVIMAGE_INTEGRATION_USERNAME
  #  always:
  #    - script: echo "always"
  #    - script: echo "lol"
  #    - NOTIFY: notification-slack
  #- name: script-101
  #  type: runSh
  #  steps:
  #    - IN: docker-cli-config
  #    - TASK:
  #      - script: echo hey
  #      - script: aws --version
  #      - script: docker -v
  #      - script: docker pull bharath92/gitissues
  #- name: script-1111
  #  type: runCLI
  #  steps:
  #    - IN: script-101
  #    - IN: docker-cli-config
  #    - TASK:
  #      - script: echo hhhh
  #      - script: docker -v
  #      - script: docker pull bharath92/gitissues
  #- name: dv-man-versionName
  #  type: manifest
  #  steps:
  #    - IN: script-1
  #    - IN: dv-image
  #      pull: false
  #      versionName: latest
  #  on_success:
  #    - script: echo "on_success_man"
 # - name: split-branch-hippo-cms-runSh
 #   type: runSh
 #   allowPublicAccess: true
 #   steps:
 #     - IN: dv-man-versionName
 #     - IN: trigger-1
 #     - IN: dv-image
 #     - IN: sample-script-3
 #       showBuildStatus: true
 #     - IN: rc_api_params
 #     - TASK:
 #       - script: ./IN/sample-script-3/gitRepo/check_queue.sh rc
 #       - script: ./IN/sample-script-3/gitRepo/echo.sh
 #   on_success:
 #     - script: echo "success"
 #   on_failure:
 #     - script: echo "on_failure"
 # - name: testprivate_runCI
 #   type: runCI
 #   steps:
 #     - IN: script-1
 #     - IN: testprivate_ciRepo
 # - name: test_lol
 #   type: runSh
 #   steps:
 #     - IN: sampleJav_gitRepo
 #     - TASK:
 #       - script: echo lol
 # - name: sampleJav_runCI
 #   type: runCI
 #   steps:
 #     - IN: test_lol
 #     - IN: sampleJav_ciRepo
 #     - OUT: dv-image
 # - name: admiral_runCI
 #   type: runCI
 #   steps:
 #     - IN: admiral_ciRepo
  
